{"version":3,"sources":["webpack:///src/app/pages/item-master/add-edit-item/add-edit-item-routing.module.ts","webpack:///src/app/pages/item-master/add-edit-item/add-edit-item.component.ts","webpack:///src/app/pages/item-master/add-edit-item/add-edit-item.component.html","webpack:///src/app/pages/item-master/add-edit-item/add-edit-item.module.ts"],"names":["routes","path","component","data","breadcrumb","icon","breadcrumb_caption","status","AddEditItemRoutingModule","forChild","imports","exports","AddEditItemComponent","_fb","_avRoute","_commonService","_router","title","SelectedStatus","userId","localStorage","getItem","isInserted","msgType","message","categories","id","name","disabled","snapshot","params","itemId","itemForm","group","Item_ID","Sub_Catg_ID","required","SR_NO","Type_ID","Brand_ID","UOM","Qty","Price","Display_Seq_No","Status","Created_By","IsInserted","getCommonList","getItemById","subscribe","resp","setValue","error","errorMessage","GetLovDetailByColumn","StatusList","UOMList","GetActiveSubCategoryList","SubCategoryList","GetActiveBrandList","BrandList","GetActiveTypeList","TypeList","valid","saveItem","value","splitData","toString","split","length","fire","navigate","get","save","cancel","selector","templateUrl","styleUrls","AddEditItemModule","declarations"],"mappings":"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","file":"add-edit-item-add-edit-item-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AddEditItemComponent} from './add-edit-item.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddEditItemComponent,\n    data: {\n      breadcrumb: 'Add Item',\n      icon: 'icofont-layout bg-c-blue',\n      breadcrumb_caption: 'Item Add',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddEditItemRoutingModule { }\n\n","import { DropdownListInt } from './../../../models/DropdownListInt';\n\nimport { Component,Input, OnInit } from '@angular/core';\n// import { ItemMasterService } from \"../item-master.service\";\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl,FormsModule } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from \"rxjs\";\n// import { ItemMaster } from \"../item-master-model\";\n// import { LovMaster } from \"../../../models/LovMaster\";\n// import { BrandMaster } from \"../../../models/BrandMaster\";\n// import { SubCategoryMaster } from \"../../../models/SubCategoryMaster\";\n// import { TypeMaster } from \"../../../models/TypeMaster\";\n\nimport { ProtoServicesService } from \"../../../Services/proto-services.service\";\nimport { Select2OptionData } from 'ng-select2';\nimport { Options } from 'select2';\nimport { stringify } from '@angular/compiler/src/util';\nimport { DropdownList } from './../../../models/DropdownList';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\n@Component({\n  selector: 'app-add-edit-item',\n  templateUrl: './add-edit-item.component.html',\n  styleUrls: ['./add-edit-item.component.css']\n})\nexport class AddEditItemComponent implements OnInit {\n  // IsAddEdit = true;\n  // @Input() showAddressParam: boolean = false;\n\n  itemForm: FormGroup;\n  title: string = \"Create\";\n  itemId: number;\n  errorMessage: any;\n  StatusList : Observable<DropdownList[]>;\n  UOMList : Observable<DropdownList[]>;\n  SubCategoryList : Observable<DropdownListInt[]>;\n  BrandList : Observable<DropdownListInt[]>;\n  TypeList : Observable<DropdownListInt[]>;\n  SelectedStatus : string = 'A';\n  userId : string = localStorage.getItem('userId');\n  isInserted : string = 'I';\n  msgType : string = '';\n  message : string = '';\n\n  // StatusList = [{id : '0',name :'F'}];\n  categories  = [\n    {id: '1', name: 'Laravel'},\n    {id: '2', name: 'Codeigniter'},\n    {id: '3', name: 'React'},\n    {id: '4', name: 'PHP'},\n    {id: '5', name: 'Angular'},\n    {id: '6', name: 'Vue'},\n    {id: '7', name: 'JQuery', disabled: true},\n    {id: '8', name: 'Javascript'},\n  ];\n\n  // selected = [\n  //   {id: '5', name: 'Angular'},\n  //   {id: '6', name: 'Vue'}\n  // ];\n\n\n  constructor(private _fb: FormBuilder, private _avRoute: ActivatedRoute,\n    private _commonService : ProtoServicesService, private _router: Router) {\n      debugger;\n      if (this._avRoute.snapshot.params[\"id\"]) {\n        this.itemId = this._avRoute.snapshot.params[\"id\"];\n        this.isInserted = 'U';\n      }\n\n      this.itemForm = this._fb.group({\n        Item_ID :0,\n        Sub_Catg_ID: ['', [Validators.required]],\n        SR_NO: new FormControl(''),\n        Type_ID: ['', [Validators.required]],\n        Brand_ID: ['', [Validators.required]],\n        UOM: ['', [Validators.required]],\n        Qty: ['', [Validators.required]],\n        Price: ['', [Validators.required]],\n        Display_Seq_No: ['', [Validators.required]],\n        Status: new FormControl(''),\n        Created_By: this.userId,\n        IsInserted:this.isInserted\n        // empName: ['', [Validators.required]],\n        // gender: ['', [Validators.required]],\n        // mobileNo: ['', [Validators.required,Validators.maxLength(10),]],\n        // email: ['', [Validators.required]],\n        // isRegularEmp: ['', [Validators.required]],\n        // birthDate: ['', [Validators.required]]\n      })\n\n    }\n\n  public loadResult() {\n    return true;\n  }\n  ngOnInit(): void {\n    this.getCommonList();\n    if (this.itemId > 0) {\n      this.title = \"Edit\";\n      this._commonService.getItemById(this.itemId)\n        .subscribe((resp) =>\n        {\n          debugger;\n          this.SelectedStatus = resp.Status;\n          this.itemForm.setValue(resp)\n          , error => this.errorMessage = error\n        });\n    }\n\n  }\n\n  getCommonList(){\n    //let StatusList = [{id : '0',name :'F'}];\n     //this._commonService.GetLovDetailByColumn(\"ACTIVEINACTIVE\");\n     this._commonService.GetLovDetailByColumn(\"ACTIVEINACTIVE\").subscribe(\n      (data) =>\n       {\n          this.StatusList = data;\n      }\n    )\n\n    this._commonService.GetLovDetailByColumn(\"UOM\").subscribe(\n      (data) =>\n       {\n        this.UOMList =  data;\n      }\n    )\n    // this.SubCategoryList = this._commonService.GetActiveSubCategoryList();\n\n    this._commonService.GetActiveSubCategoryList().subscribe(\n      (data) =>\n       {\n         this.SubCategoryList = data;\n      }\n    )\n\n    this._commonService.GetActiveBrandList().subscribe(\n      (data) =>\n       {\n        this.BrandList =  data;\n      }\n    )\n\n    this._commonService.GetActiveTypeList().subscribe(\n      (data) =>\n       {\n        this.TypeList =  data;\n      }\n    )\n\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.title == \"Create\") {\n      this._commonService.saveItem(this.itemForm.value)\n        .subscribe((data) => {\n          debugger;\n          if (data != null && data != \"e\" && data != \"r\" && data != \"o\") {\n\n            let splitData = data.toString().split(\"|\");\n            this.msgType = splitData.length > 0 ? splitData[0] :'E';\n            this.message = splitData.length > 1 ? splitData[1] :'Something went wrong!';\n\n            if (this.msgType == 'S') {\n              Swal.fire('Item Added', this.message, 'success')\n              this._router.navigate(['/master/item-master']);\n            }else {\n              Swal.fire('Error', this.message, 'error')\n            }\n\n          }else{\n            Swal.fire('Error', 'Something went wrong!', 'error')\n          }\n\n        }, error => this.errorMessage = error)\n    }\n    else if (this.title == \"Edit\") {\n      this._commonService.saveItem(this.itemForm.value)\n        .subscribe((data) => {\n          if (data != null && data != \"e\" && data != \"r\" && data != \"o\") {\n            let splitData = data.toString().split(\"|\");\n            this.msgType = splitData.length > 0 ? splitData[0] :'E';\n            this.message = splitData.length > 1 ? splitData[1] :'Something went wrong!';\n\n            if (this.msgType == 'S') {\n              Swal.fire('Item Updated', this.message, 'success')\n              this._router.navigate(['/master/item-master']);\n            }else {\n              Swal.fire('Error', this.message, 'error')\n            }\n          }else{\n            Swal.fire('Error', 'Something went wrong!', 'error')\n          }\n        }, error => this.errorMessage = error)\n    }\n  }\n\n  cancel() {\n    this._router.navigate(['/master/item-master']);\n  }\n\n  get Sub_Catg_ID() { return this.itemForm.get('Sub_Catg_ID'); }\n  get SR_NO() { return this.itemForm.get('SR_NO'); }\n  get Type_ID() { return this.itemForm.get('Type_ID'); }\n  get Brand_ID() { return this.itemForm.get('Brand_ID'); }\n  get UOM() { return this.itemForm.get('UOM'); }\n  get Qty() { return this.itemForm.get('Qty'); }\n  get Price() { return this.itemForm.get('Price'); }\n  get Display_Seq_No() { return this.itemForm.get('Display_Seq_No'); }\n  get Status() { return this.itemForm.get('Status'); }\n  get Created_By() { return 'admin' }\n\n}\n","\n<!-- <div class=\"input-group align-center\" *ngIf=\"Sub_Catg_ID.invalid && formDir.submitted\">\n  <span class=\"text-danger align-center\" >\n    Please select Item\n  </span>\n</div> -->\n<div>\n  <div *ngIf=\"Sub_Catg_ID.invalid && formDir.submitted\" class='alert alert-danger'>Please Select Item</div>\n  <div *ngIf=\"Type_ID.invalid && formDir.submitted && Sub_Catg_ID.valid\" class='alert alert-danger'>Please Select Type</div>\n  <div *ngIf=\"Brand_ID.invalid && formDir.submitted && Sub_Catg_ID.valid && Type_ID.valid\" class='alert alert-danger'>Please Select Brand</div>\n  <div *ngIf=\"UOM.invalid && formDir.submitted && Sub_Catg_ID.valid && Type_ID.valid && Brand_ID.valid\" class='alert alert-danger'>Please Select UOM</div>\n  <div *ngIf=\"Qty.invalid && formDir.submitted && Sub_Catg_ID.valid && Type_ID.valid && Brand_ID.valid  && UOM.valid\" class='alert alert-danger'>Please Enter Quantity</div>\n  <div *ngIf=\"Price.invalid && formDir.submitted && Sub_Catg_ID.valid && Type_ID.valid && Brand_ID.valid  && UOM.valid && Qty.valid\" class='alert alert-danger'>Please Enter Price</div>\n  <div *ngIf=\"Display_Seq_No.invalid && formDir.submitted && Sub_Catg_ID.valid && Type_ID.valid && Brand_ID.valid  && UOM.valid && Qty.valid && Price.valid\" class='alert alert-danger'>Please Enter Display Seq No</div>\n</div>\n\n\n  <form [formGroup]=\"itemForm\" (ngSubmit)=\"save()\" #formDir=\"ngForm\" novalidate>\n    <div>\n        <div class=\"form-group row\">\n\n            <label class=\"col-sm-2 col-form-label\">Item Name<span class=\"warningclass\">*</span></label>\n            <div class=\"col-sm-4\">\n\n                <!-- <ng-select2 [data]=\"SubCategoryList\"\n                    [placeholder]=\"'Demo with options'\"\n                    ></ng-select2> -->\n\n\n                    <ng-select formControlName=\"Sub_Catg_ID\" bindLabel=\"name\" placeholder=\"Select Item\" appendTo=\"body\"  id=\"Sub_Catg_ID\">\n                      <ng-option *ngFor=\"let scat of SubCategoryList\" [value]=\"scat.id\"> {{scat.name}}</ng-option>\n                    </ng-select>\n                <!-- <ng-select formControlName=\"Sub_Catg_ID\" [items]=\"SubCategoryList\" bindLabel=\"name\" placeholder=\"Select Item\" appendTo=\"body\"  id=\"Sub_Catg_ID\">   </ng-select> -->\n                <!-- <select class=\"form-control\" formControlName=\"Sub_Catg_ID\" id=\"Sub_Catg_ID\" data-placeholder=\"Pick a Item\">\n                    <option *ngFor=\"let scat of SubCategoryList\" [value]=\"scat.id\">\n                      {{scat.name}}\n                    </option>\n                  </select> -->\n            </div>\n\n            <label class=\"col-sm-2 col-form-label\">Type<span class=\"warningclass\">*</span></label>\n            <div class=\"col-sm-4\">\n              <ng-select  bindLabel=\"name\" placeholder=\"Select Type\" appendTo=\"body\" formControlName=\"Type_ID\" id=\"Type_ID\">\n                <ng-option *ngFor=\"let item of TypeList\" [value]=\"item.id\"> {{item.name}}</ng-option>\n                 </ng-select>\n                <!-- <select class=\"form-control\" formControlName=\"Type_ID\" id=\"Type_ID\">\n                    <option *ngFor=\"let type of TypeList | async; let i = index\" [value]=\"type.id\">\n                      {{type.name}}\n                    </option>\n                  </select> -->\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Brand Name<span class=\"warningclass\">*</span></label>\n            <div class=\"col-sm-4\">\n              <ng-select  bindLabel=\"name\" placeholder=\"Select Brand\" appendTo=\"body\" formControlName=\"Brand_ID\" id=\"Brand_ID\">\n                <ng-option *ngFor=\"let item of BrandList\" [value]=\"item.id\"> {{item.name}}</ng-option>\n              </ng-select>\n                <!-- <select class=\"form-control\" formControlName=\"Brand_ID\" id=\"Brand_ID\">\n                    <option *ngFor=\"let brand of BrandList | async; let i = index\" [value]=\"brand.id\">\n                      {{brand.name}}\n                    </option>\n                  </select> -->\n            </div>\n            <label class=\"col-sm-2 col-form-label\">UOM<span class=\"warningclass\">*</span></label>\n            <div class=\"col-sm-4\">\n              <ng-select bindLabel=\"name\" placeholder=\"Select UOM\" appendTo=\"body\" formControlName=\"UOM\" id=\"UOM\">\n                <ng-option *ngFor=\"let item of UOMList\" [value]=\"item.id\"> {{item.name}}</ng-option>\n              </ng-select>\n\n                <!-- <select class=\"form-control\" formControlName=\"UOM\" id=\"UOM\">\n                    <option *ngFor=\"let uom of UOMList | async; let i = index\" [value]=\"uom.id\">\n                      {{uom.name}}\n                    </option>\n                  </select> -->\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Qty<span class=\"warningclass\">*</span></label>\n            <div class=\"col-sm-4\">\n                <input class=\"form-control\" type=\"number\" formControlName=\"Qty\" id=\"Qty\" >\n            </div>\n            <label class=\"col-sm-2 col-form-label\">Price<span class=\"warningclass\">*</span></label>\n            <div class=\"col-sm-4\">\n                <input class=\"form-control\" type=\"number\" formControlName=\"Price\" id=\"Price\" >\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Display Seq No<span class=\"warningclass\">*</span></label>\n            <div class=\"col-sm-4\">\n                <input class=\"form-control\" type=\"number\" formControlName=\"Display_Seq_No\" id=\"Display_Seq_No\" >\n            </div>\n            <label class=\"col-sm-2 col-form-label\">Status</label>\n            <div class=\"col-sm-4\">\n                <!-- <ng-select2 [data]=\"exampleData\"\n                    [placeholder]=\"'Status'\"\n                    [width]=\"900\"\n                    [options]=\"options\"></ng-select2> -->\n\n                    <!-- disabled = \"isInserted == 'I'? true : false\" -->\n                <select class=\"form-control\" formControlName=\"Status\" id=\"Status\" ngModel = \"{{SelectedStatus}}\" [attr.disabled]=\"isInserted == 'I' ? 'disabled' : null\">\n                    <option *ngFor=\"let st of StatusList; let i = index\" [value]=\"st.id\">\n                      {{st.name}}\n                    </option>\n                  </select>\n<!--\n                  <ng-select [items]=\"StatusList\"\n                        bindLabel=\"name\"\n                        placeholder=\"Select Category\"\n                        appendTo=\"body\"\n                        multiple=\"false\"\n                        formControlName=\"Status\" [(ngModel)]=\"selected\">\n                   </ng-select> -->\n\n\n                  <!-- <ng-select [items]=\"StatusList\"\n                        bindLabel=\"name\"\n                        placeholder=\"Select Category\"\n                        appendTo=\"body\"\n                        formControlName=\"Status\">\n                   </ng-select> -->\n            </div>\n        </div>\n    </div>\n<br/>\n    <hr/>\n<div class=\"text-center\">\n  <div class=\"form-group align-center\">\n    <button type=\"submit\" class=\"btn btn-success fa fa-check-square-o cursor-pointer\"> <span class=\"font-d\"> Save</span></button> &nbsp;\n    <button class=\"btn btn-danger fa fa-remove cursor-pointer\" (click)=\"cancel()\"><span class=\"font-d\"> Cancel</span></button>\n</div>\n</div>\n\n</form>\n\n","import { NgSelectModule } from '@ng-select/ng-select';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AddEditItemRoutingModule } from './add-edit-item-routing.module';\nimport { AddEditItemComponent } from './add-edit-item.component';\nimport {SharedModule} from '../../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { NgSelect2Module } from 'ng-select2';\n\n@NgModule({\n\n  imports: [\n    CommonModule,\n    AddEditItemRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    NgSelect2Module\n  ] , declarations: [AddEditItemComponent]\n})\nexport class AddEditItemModule { }\n"]}